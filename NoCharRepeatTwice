public class NoCharRepeatTwice {
	public static void main(String[] args){
		System.out.println(changeString("babcccb"));
	}
	
	public static String changeString(String s) {
		Map<Character, Integer> map = new HashMap<Character, Integer>();
		for (int i = 0; i < s.length(); i++) {
			char c = s.charAt(i);
			if (!map.containsKey(c)) {
				map.put(c, 1);
			} else {
				map.put(c, map.get(c) + 1);
			}
		}

		List<Map.Entry<Character, Integer>> entries = new ArrayList<Map.Entry<Character, Integer>>(map.entrySet());
		Collections.sort(entries, new Comparator<Map.Entry<Character, Integer>>() {
			@Override
			public int compare(Map.Entry<Character, Integer> a, Map.Entry<Character, Integer> b) {
				//return a.getValue().compareTo(b.getValue());// decreasing
				return b.getValue().compareTo(a.getValue());// increasing
			}
		});

		if (entries.get(0).getValue() > Math.ceil((float)s.length() / 2.0)) {
			return "Invalid Input";
		}

		char[] ret = new char[s.length()];
		int index = 0;

		for (int i = 0; i < s.length(); i = i + 2) {
			Map.Entry<Character, Integer> entry = entries.get(index);
			ret[i] = entry.getKey();
			entry.setValue(entry.getValue() - 1);
			if(entry.getValue() == 0){
				index ++;
			}
		}
		
		for (int i = 1; i < s.length(); i = i + 2) {
			Map.Entry<Character, Integer> entry = entries.get(index);
			ret[i] = entry.getKey();
			entry.setValue(entry.getValue() - 1);
			if(entry.getValue() == 0){
				index ++;
			}
		}
		
		return new String(ret);
	}
}
